class ApiClient {
//Different Base Urls
  String userBaseUrl =
      "theBaseUrl"; //base url
  Future<Map<String, dynamic>> makePostRequest(
      {required String endPoint,
      required Map<String, dynamic> body,
      String contentType = 'application/json'}) async {
    try {
      // Convert the body into JSON
      String jsonBody = json.encode(body);

      // Set headers
      Map<String, String> headers = {
        'Content-Type': contentType,
        'Accept': 'application/json',
        // Add any other headers you need, e.g., authentication tokens
        'Authorization': 'Bearer ${Get.find<Triventizx>().userAccessToken}'
      };

      // Make the POST request
      final response = await http.post(
        Uri.parse("$userBaseUrl/$endPoint"),
        headers: headers,
        body: jsonBody,
      );
      // Check the status code
      if (response.statusCode == 200 || response.statusCode == 201) {
        Map<String, dynamic> successReturnbody = jsonDecode(response.body);
        Get.find<Triventizx>().statusCode.value = 0;
        return successReturnbody;
      } else {
        //print(response.body);
        Map<String, dynamic> errorMessage = jsonDecode(response.body);
        Get.find<Triventizx>().statusCode.value = 1;
        return errorMessage;
      }
    } catch (e) {
      Get.find<Triventizx>().statusCode.value = 2;
      throw "$e"
    }
  }

  //
  Future<Map<String, dynamic>> makeGetRequest(String endPoint) async {
    try {
      // Make the GET request
      final response = await http.get(Uri.parse("$userBaseUrl/$endPoint"),
          headers: {
            'Authorization': 'Bearer ${Get.find<Triventizx>().userAccessToken}'
          });

      // Check the status code
      if (response.statusCode == 200 || response.statusCode == 201) {
        // Request successful
        // print('Request successful');
        // Parse the JSON response
        Map<String, dynamic> data = json.decode(response.body);
        Get.find<Triventizx>().statusCode.value = 0;
        return data;
      } else {
        // Request failed
        //print('Request failed with status code: ${response.statusCode}');
        // print('Response body: ${response.body}');
        Map<String, dynamic> errorMessage = jsonDecode(response.body);
        Get.find<Triventizx>().statusCode.value = 1;
        return errorMessage;
      }
    } catch (e) {
      // Handle any errors
      Get.find<Triventizx>().statusCode.value = 2;
      
      throw "$e"
    }
  }

  Future<dynamic> makePatchRequest(
      {required String endPoint,
      required Map<String, dynamic> body,
      Map<String, String>? headers}) async {
    try {
      // Default headers
      final defaultHeaders = {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      };

      // Set headers
      Map<String, String> headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        // Add any other headers you need, e.g., authentication tokens
        'Authorization': 'Bearer ${Get.find<Triventizx>().userAccessToken}'
      };

      // Send PATCH request
      final response = await http.patch(Uri.parse("$userBaseUrl/$endPoint"),
          headers: headers, body: json.encode(body));

      if (response.statusCode == 200 || response.statusCode == 201) {
        Map<String, dynamic> successReturnbody = jsonDecode(response.body);
        Get.find<Triventizx>().statusCode.value = 0;
        return successReturnbody;
      } else {
        //print(response.body);
        Map<String, dynamic> errorMessage = jsonDecode(response.body);
        Get.find<Triventizx>().statusCode.value = 1;
        return errorMessage;
      }
    } catch (e) {
      Get.find<Triventizx>().statusCode.value = 2;
      Map<String, dynamic> outOfScppeError = {"e": "An error occurred"};
      return outOfScppeError;
    }
  }

//
//   Future<Map<String, dynamic>> makePatchRequest(String url, Map<String, dynamic> body,) async {
//     try {
//       Map<String, String> headers = {
//         'Accept': 'application/json',
//         "Content-Type": "application/json",
//         // Add any other headers you need, e.g., authentication tokens
//         'Authorization': 'Bearer ${Get.find<Jollofx>().userTokens["accessToken"]}',
//       };
//
//       final response = await http.patch(
//         Uri.parse(url),
//         body: jsonEncode(body),
//         headers: headers,
//       );
//      //print(response.statusCode);
//
//       if (response.statusCode == 200) {
//         Get.find<Jollofx>().statusCode.value = 0;
//         Map<String,dynamic>  reply=jsonDecode(response.body);
//        // print(reply);
//         return reply;
//       } else {
//         //print('Error making PATCH request: ${response.statusCode}');
//         Get.find<Jollofx>().statusCode.value = 1;
//         return {"1":"@"};
//       }
//     } catch (e) {
//       Get.find<Jollofx>().statusCode.value = 2;
//       //print('Exception during PATCH request: $e');
//       return {"2":"@"};
//     }
//   }
//
//   Future<Map<String, dynamic>> makePutRequest(String url,String id) async {
//     final formedUrl = '$url/$id';
//
//     final headers = {
//       'Content-Type': 'application/json',
//       'Authorization': 'Bearer ${Get.find<Jollofx>().userTokens["accessToken"]}',
//     };
//
//     try {
//       final response = await http.put(Uri.parse(formedUrl), headers: headers);
//
//       if (response.statusCode == 200) {
//         Map<String, dynamic> returned = jsonDecode(response.body);
//         Get.find<Jollofx>().statusCode.value = 0;
//         //print('Resource updated successfully');
//         //print('Response: ${response.body}');
//         return returned;
//       } else {
//         Get.find<Jollofx>().statusCode.value = 1;
//        // print('Failed to update resource. Status code: ${response.statusCode}');
//         //print('Response: ${response.body}');
//         return {};
//       }
//     } catch (e) {
//       Get.find<Jollofx>().statusCode.value = 2;
//      // print('Error occurred: $e');
//       return {};
//     }
//   }
//
}
